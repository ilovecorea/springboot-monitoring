version: "3.8"

networks:
  monitoring:
    driver: bridge

volumes:
  prometheus_data: {}

services:

  postgresql:
    image: postgres:13.4
    environment:
      - POSTGRES_USER=blog
      - POSTGRES_PASSWORD=
      - TZ=Asia/Seoul
      - POSTGRES_HOST_AUTH_METHOD=trust
    ports:
      - "5432:5432"
    networks:
      - monitoring

  consul-server:
    image: hashicorp/consul:1.10.3
    container_name: consul-server
    restart: always
    volumes:
      - ./consul/server.json:/consul/config/server.json:ro
    networks:
      - monitoring
    ports:
      - "8500:8500"
      - "8600:8600/tcp"
      - "8600:8600/udp"
    command: "consul agent -dev -ui -client 0.0.0.0 -log-level=INFO"

  spring-app1:
    build:
      context: spring-app
      dockerfile: Dockerfile
    container_name: app1
    image: ilovecorea/spring-app:${TAG:-latest}
    restart: always
    environment:
      - SPRING_PROFILES_ACTIVE=consul
      - MANAGEMENT_METRICS_EXPORT_PROMETHEUS_ENABLED=true
      - SPRING_CLOUD_CONSUL_HOST=consul-server
      - SPRING_CLOUD_CONSUL_PORT=8500
    ports:
      - "8080:8080"
    networks:
      - monitoring
    depends_on:
      - consul-server

  spring-app2:
    build:
      context: spring-app
      dockerfile: Dockerfile
    container_name: app2
    image: ilovecorea/spring-app:${TAG:-latest}
    restart: always
    environment:
      - SPRING_PROFILES_ACTIVE=consul
      - MANAGEMENT_METRICS_EXPORT_PROMETHEUS_ENABLED=true
      - SPRING_CLOUD_CONSUL_HOST=consul-server
      - SPRING_CLOUD_CONSUL_PORT=8500
    ports:
      - "8081:8080"
    networks:
      - monitoring
    depends_on:
      - consul-server

  node-exporter:
    image: prom/node-exporter:v1.2.2
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - "9100:9100"
    networks:
      - monitoring

  prometheus:
    image: prom/prometheus:v2.30.3
    container_name: prometheus
    restart: always
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - monitoring
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    depends_on:
      - consul-server

  grafana:
    image: grafana/grafana:7.5.3
    container_name: grafana
    restart: always
    volumes:
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./grafana/provisioning/:/etc/grafana/provisioning
      - ./grafana/dashboards/:/var/lib/grafana/dashboards
    networks:
      - monitoring
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
